services:
  timescaledb:
    image: timescale/timescaledb-ha:pg16
    container_name: timescaledb
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Fix: added space here
      - proposely_data:/var/lib/docker/volumes/proposely_data/_data

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:0.1.0
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescaledb:5432/${POSTGRES_DB}
      OPENAI_API_KEY: ${OLLAMA_API_KEY}
    depends_on:
      - timescaledb
    networks:
      - app-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama_volume:/root/.ollama 
    pull_policy: always
    tty: true
    restart: unless-stopped
    ports:
      - 11434:11434
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proposely_app
    ports:
      - "8501:8501"
    depends_on:
      - timescaledb
      - ollama
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: timescaledb  # Directly reference the timescaledb service name
      PORT: ${PORT}
    networks:
      - app-network
    restart: unless-stopped

volumes:
  proposely_data:
    external: true
  ollama_volume:
    external: true

networks:
  app-network:
    driver: bridge


